{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Said Vara/Desktop/KEYENCE2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction DashboardComponent_tr_27_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cell_r4, \" \");\n  }\n}\n\nfunction DashboardComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, DashboardComponent_tr_27_td_1_Template, 2, 1, \"td\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\n\nfunction DashboardComponent_tr_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r5.description, \" \");\n  }\n}\n\nexport class DashboardComponent {\n  constructor(_productService, router) {\n    this._productService = _productService;\n    this.router = router;\n    this.listProduct = [];\n  }\n\n  ngOnInit() {\n    this.getProducts();\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login']);\n  }\n\n  getProducts() {\n    this._productService.getProducts().subscribe(data => {\n      this.listProduct = data;\n    });\n  }\n\n  readExcel(event) {\n    const target = event.target;\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary'\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      console.log(ws);\n      this.data = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n      console.log(this.data);\n      let x = this.data.slice(1);\n      console.log(x);\n    };\n\n    reader.readAsBinaryString(target.files[0]);\n  }\n\n  leerexcel(event) {\n    return _asyncToGenerator(function* () {\n      var workbook = XLSX.utils.table_to_book(event);\n      console.log(workbook);\n    })();\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 41,\n  vars: 2,\n  consts: [[1, \"navbar\", \"navbar-light\", \"fixed-top\", 2, \"background-color\", \"#009092\"], [1, \"container-fluid\"], [\"type\", \"button\", \"data-bs-toggle\", \"offcanvas\", \"data-bs-target\", \"#offcanvasWithBothOptions\", \"aria-controls\", \"offcanvasWithBothOptions\", 1, \"navbar-toggler\"], [\"id\", \"offcanvasExampleLabel\", 1, \"offcanvas-title\"], [1, \"navbar-toggler-icon\"], [\"data-bs-scroll\", \"true\", \"tabindex\", \"-1\", \"id\", \"offcanvasWithBothOptions\", \"aria-labelledby\", \"offcanvasWithBothOptionsLabel\", 1, \"offcanvas\", \"offcanvas-start\", \"lateral\", 2, \"width\", \"300px\"], [1, \"offcanvas-header\", \"header-nb\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"offcanvas-body\"], [\"div\", \"\", 1, \"d-grid\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"container\", \"mt-4\", \"text-center\", \"col-md-4\"], [\"type\", \"file\", \"multiple\", \"false\", 1, \"form-control\", 3, \"change\"], [1, \"container\", \"mt-5\", \"text-center\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"mt-2\", \"text-center\"], [\"scope\", \"col\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\")(1, \"nav\", 0)(2, \"div\", 1)(3, \"button\", 2)(4, \"h6\", 3);\n      i0.ɵɵtext(5, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"h5\", 3);\n      i0.ɵɵtext(10, \"Funcionalidades\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"button\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_14_listener() {\n        return ctx.logOut();\n      });\n      i0.ɵɵtext(15, \"Cerrar sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelement(16, \"br\")(17, \"br\")(18, \"br\")(19, \"br\");\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"input\", 12);\n      i0.ɵɵlistener(\"change\", function DashboardComponent_Template_input_change_21_listener($event) {\n        return ctx.leerexcel($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 13)(23, \"h2\");\n      i0.ɵɵtext(24, \"Datos Excel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"table\", 14)(26, \"tbody\");\n      i0.ɵɵtemplate(27, DashboardComponent_tr_27_Template, 2, 1, \"tr\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementStart(29, \"div\", 16)(30, \"h2\");\n      i0.ɵɵtext(31, \"Productos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"table\", 14)(33, \"thead\")(34, \"tr\")(35, \"th\", 17);\n      i0.ɵɵtext(36, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"th\", 17);\n      i0.ɵɵtext(38, \"Descripcion\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"tbody\");\n      i0.ɵɵtemplate(40, DashboardComponent_tr_40_Template, 5, 2, \"tr\", 15);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listProduct);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["XLSX","i0","DashboardComponent","constructor","_productService","router","ngOnInit","getProducts","logOut","localStorage","removeItem","navigate","subscribe","data","listProduct","readExcel","event","target","files","length","Error","reader","FileReader","onload","e","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","console","log","utils","sheet_to_json","header","x","slice","readAsBinaryString","leerexcel","workbook","table_to_book","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Said Vara\\Desktop\\KEYENCE2\\frontend\\src\\app\\components\\dashboard\\dashboard.component.ts","C:\\Users\\Said Vara\\Desktop\\KEYENCE2\\frontend\\src\\app\\components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/interfaces/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Router } from '@angular/router';\nimport * as XLSX from 'xlsx'\nimport readXlsxFile from 'read-excel-file'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  listProduct: Product[] = []\n  ExcelData: any;\n  data: [][] | undefined;\n  constructor(private _productService: ProductService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  logOut() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/login'])\n  }\n\n  getProducts() {\n    this._productService.getProducts().subscribe(data => {\n      this.listProduct = data;\n    })\n  }\n\n  readExcel(event: any){\n\n    \n    const target : DataTransfer =  <DataTransfer>(event.target);\n    \n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n\n    const reader: FileReader = new FileReader();\n\n    reader.onload = (e: any) => {\n      const bstr: any = e.target.result;\n\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n      const wsname : string = wb.SheetNames[0];\n \n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      console.log(ws);\n\n      this.data = (XLSX.utils.sheet_to_json(ws, { header: 1 }));\n\n      console.log(this.data);\n\n      let x = this.data.slice(1);\n      console.log(x);\n\n    };\n\n    reader.readAsBinaryString(target.files[0]);\n\n  }\n\n\n\n  async leerexcel(event: any){\n\n    var workbook = XLSX.utils.table_to_book(event);\n    console.log(workbook);\n  }\n\n    /*const file = event.target.files[0];\n\n    const fileReader = new FileReader();\n    fileReader.readAsBinaryString(file);\n\n    fileReader.onload = (e) => {\n\n      var workBook = XLSX.read(fileReader.result,{type: 'binary'});\n      var sheetNames = workBook.SheetNames;\n      this.ExcelData = XLSX.utils.sheet_to_json(workBook.Sheets[sheetNames[0]])\n      console.log(this.ExcelData);\n\n  }*/\n\n\n\n}\n","<!--Bar nav-->\n<header>\n  <nav class=\"navbar navbar-light fixed-top \" style=\"background-color: #009092\">\n      <div class=\"container-fluid\">\n          <!--Botón menu-->\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasWithBothOptions\" aria-controls=\"offcanvasWithBothOptions\">\n            <h6 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Menu</h6>    \n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          \n          <!--Contenido botón menu-->\n          <div style=\"width: 300px;\" class=\"offcanvas offcanvas-start lateral\" data-bs-scroll=\"true\" tabindex=\"-1\" id=\"offcanvasWithBothOptions\" aria-labelledby=\"offcanvasWithBothOptionsLabel\">\n            <div class=\"offcanvas-header header-nb\">\n              <h5 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Funcionalidades</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"offcanvas-body\">\n                \n                <div div class=\"d-grid gap-2\">\n                  <button class=\"btn btn-danger\" (click)=\"logOut()\" type=\"button\">Cerrar sesión</button>\n                </div> \n            </div>\n        </div>\n      </div>\n  </nav>\n</header>\n<br>\n<br>\n<br>\n<br>\n\n<div class=\"container mt-4 text-center col-md-4\">\n<input type=\"file\" (change)=\"leerexcel($event)\" class=\"form-control\" multiple=\"false\">\n</div>\n\n\n<div class=\"container mt-5 text-center\">\n  <h2>Datos Excel</h2>\n  <table class=\"table\">\n    <tbody>\n      <tr *ngFor=\"let row of data\">\n              <td *ngFor=\"let cell of row\">\n                      {{cell}}\n              </td>\n      </tr>\n  </tbody>\n       \n    </table>\n</div>\n\n\n\n\n\n<br>\n<div class=\"container mt-2 text-center\">\n    <h2>Productos</h2>\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Descripcion</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of listProduct\">\n            <td>{{ item.name }}</td>\n            <td>{{ item.description }} </td>\n          </tr>\n         \n        </tbody>\n      </table>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module"}